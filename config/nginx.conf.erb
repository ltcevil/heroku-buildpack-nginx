daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any; # Heroku router sends Via header

	server_tokens off;
	log_format main '$time_iso8601 - $status $request - client IP: $http_x_forwarded_for - to $upstream_addr - upstream status: $upstream_status, upstream_response_time $upstream_response_time, request_time $request_time';
   	 access_log /dev/stdout main;
   	 # set the following to "debug" when diagnosing an issue
  	  error_log /dev/stdout notice;
  	  log_not_found on;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;
	 # handle SNI
    	 proxy_ssl_server_name on;
    	 # resolver needs to be set because we're using dynamic proxy_pass
	 resolver 8.8.8.8;

	upstream app_server {
		server deeply-telegram.herokuapp.com:443;
	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name deeply-telegram.herokuapp.com;
		keepalive_timeout 5;

			location /2010739981:AAGeficThoCKvqAljbPT7k4w98x6B_VTt80 {
			set $upstream app_server;
			proxy_ssl_name deeply-telegram.herokuapp.com;
       		        proxy_pass https://$upstream;
		        proxy_redirect     off;
        		proxy_set_header   Host $host;
		        proxy_set_header   X-Real-IP $remote_addr;
        		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header   X-Forwarded-Host $server_name;
		}
	}
}
